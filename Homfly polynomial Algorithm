#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

double calculatePolynomial(const vector<int>& dowker_code) {
    int n = dowker_code.size();
    int k = 0;
    int components = 1;
    double P = 1.0;
    int prev_sign = 0;

    for (int i = 0; i < n; i++) {
        if (dowker_code[i] == 0) {
            continue;
        }

        int sign = (dowker_code[i] > 0) ? 1 : -1;
        if (i == 0 || sign != prev_sign) {
            components++;
        }
        prev_sign = sign;
        k++;

        if (k == 0) {
            P = 1.0;
        } else if (k == 1) {
            P = static_cast<double>(abs(dowker_code[i]));
        } else {
            P *= pow(static_cast<double>(abs(dowker_code[i])), n - 1) * pow(static_cast<double>(abs(dowker_code[i])), k);
            if (sign == -1) {
                P *= -1;
            }
        }
    }

    return P;
}

int main() {
    vector<int> dowker_code = {2, -3, 1, -1};
    double result = calculatePolynomial(dowker_code);
    cout << "P(L) = " << result << endl;
    return 0;
}Ø­Ø§Ø³Ø³ Ø§Ù† ÙƒØ¯Ø§ Ø§Ø­Ø³Ù† ðŸ˜‚
